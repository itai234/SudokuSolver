using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using SudokuSolver.Solve;
using SudokuSolver.DataStructures.Board;
using SudokuSolver.Exceptions;
using System.Diagnostics;

namespace SudokuTests;

[TestFixture]
public class Tests
{
    private HumanTechniques<int> _HumanTechniques;
    private ComputerTechniques<int> _ComputerTechniques;
    private SudokuBoard<int> _SudokuBoard;
    private List<string> SudokusBoards;
    private SudokuSolver.Validation.ValidateInput<int> validator;
    private static int maxTimeForGrid = 1000;
    private SolverManager<int> solver;
    private Stopwatch stopwatch = new Stopwatch();

    [SetUp]
    public void Setup()
    {

    }

    private void SetUpClasses(string input)
    {
        _SudokuBoard = new SudokuBoard<int>(input);
        _HumanTechniques = new HumanTechniques<int>();
        _ComputerTechniques = new ComputerTechniques<int>();
        solver = new SolverManager<int>(_SudokuBoard);
        solver.AddTechnique(_HumanTechniques);
        solver.AddTechnique(_ComputerTechniques);
    }

    
    private void solve(string input , string expectedResult)
    {
        stopwatch.Reset();
        stopwatch.Start();
        solver.SolveBoard();
        stopwatch.Stop();
        if (stopwatch.ElapsedMilliseconds > maxTimeForGrid && _SudokuBoard.Size<=16)
            Assert.Fail("Took Too Long");
        Assert.That(_SudokuBoard.BoardToString(), Is.EqualTo(expectedResult));
    }



    /// <summary>
    /// Easy Boards:
    /// </summary>
   

    [Test]
    public void TestSolveEasyBoard1()
    {
        string input =  "603000002709400300000000940210050890308027654060800701804001000500009438000300010";
        string result = "643985172759412386182736945217654893398127654465893721834571269571269438926348517";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard2()
    {
        string input =  "670000040300000000001065000807300090460000030009478201100000023706080054000910700";
        string result = "678132549325749618941865372817326495462591837539478261184657923796283154253914786";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard3()
    {
        string input =  "000000000300750960000800541030070100070490385045103600103245790000960013029001050";
        string result = "452619837318754962697832541936578124271496385845123679163245798584967213729381456";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard4()
    {
        string input =  "000300000032900781000410029093800200850060000004179050970500402281700530345620900";
        string result = "719382645432956781568417329193845267857263194624179853976538412281794536345621978";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveEasyBoard5()
    {
        string input =  "025046000460037900037810042800100463006480520054703890541000270003624009692570000";
        string result = "125946738468237915937815642879152463316489527254763891541398276783624159692571384";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard6()
    {
        string input =  "603000002709400300000000940210050890308027654060800701804001000500009438000300010";
        string result = "643985172759412386182736945217654893398127654465893721834571269571269438926348517";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveEasyBoard7()
    {
        string input =  "043927681010030920000408000724090006035000007900000030471000060050600019060070300";
        string result = "543927681817536924692418573724893156135264897986751432471389265358642719269175348";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveEasyBoard8()
    {
        string input = "500000201170000640900010008050070084040009072017348009826090010095100036431850920";
        string result = "584637291172985643963412758659271384348569172217348569826793415795124836431856927";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard9()
    {
        string input =  "080040953300710086020800010900020008608000000000008109060100705047000301105467090";
        string result = "781246953394715286526839417913524678678391524452678139269183745847952361135467892";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveEasyBoard10()
    {
        string input = "009004070020197050700036004046900715078000900092301640005003087003060001200000300";
        string result = "839524176624197853751836294346982715178645932592371648965213487483769521217458369";
        SetUpClasses(input);
        solve(input, result);
    }



    /// <summary>
    ///  Medium Boards: 
    /// </summary>


    [Test]
    public void TestSolveMediumBoard1()
    {
        string input  = "400000805030000000000700000020000060000080400000010000000603070500200000104000000";
        string result = "417369825632158947958724316825437169791586432346912758289643571573291684164875293";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveMediumBoard2()
    {
        string input =  "602050000000004030000000000430008000010000200000000700500270000000000081000600000";
        string result = "682153479951764832374892165437528916816947253295316748568271394729435681143689527";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard3()
    {
        string input =  "000000401800200000000607000000800060040000300010000000600000020050010000700030000";
        string result = "265389471874251693193647852327894165946125387518763249631578924452916738789432516";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard4()
    {
        string input = "000000000072060100005100082080001300400000000037090010000023800504009000000000790";
        string result = "143258679872964153695137482986541327451372968237896514719623845564789231328415796";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard5()
    {
        string input =  "000000940000090005300005070080400100463000000000007080800700000700000028050260000";
        string result = "215876943678394215349125876587432169463981752192657384826743591734519628951268437";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard6()
    {
        string input =  "450000030000801000090000000000050090200700000800000000010040000000000702000600800";
        string result = "458276931623891475197534286371452698269783154845169327712948563986315742534627819";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard7()
    {
        string input =  "060501090100090053900007000040800070000000508081705030000050200000000000076008000";
        string result = "863521794127496853954387621645839172739142568281765439498653217512974386376218945";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard8()
    {
        string input =  "020000000305062009068000300050000000000640802004700900003000001000006000170430000";
        string result = "427593186315862479968174325659328714731649852284751963593287641842916537176435298";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard9()
    {
        string input =  "000=5;7000<6304150800000000?0000030000>00;20000570;00000>00000002000900:0750000;0090400>0200<700;00?600=00>901030000?00080=000>0010000<640007?0=000029000300;0000<7003000008402000000:=0007<0069300>0<805:120076000;00043600500>005:0001009000;40600000008000000";
        string result = "91514135117210161263841528161361039141514111274316121514871121316109571011121491614583261315214123981610675113415116139541111415231012716811841567213161214910153116107155312841311691421413211161264910571581313568294713151611141012101279143115111368452161511164810135214712136934151416128115101291376892111013154361675121141275103261131591481611416613171459128114152310";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard10()
    {
        string input
        string result = "25242322212019181716151413121110987654321201918171654321252423222115141312111098761514131211252423222110987654321201918171610987615141312115432120191817162524232221543211098762019181716252423222115141312112421252322815121637526181111794142010191313161914206104252322817241273221159111185811941812122072325161031913651422171224153612101711229518131519114242025162321728421751524171913144211192018122210816625323232522212417165189210141941112013783615121815171619312251102475112223648213211420998411142620242217131216252115193182357110123206131911714812321181595102524422216177251102113152346320891716121422181119252421226241242161017141825137385191115202319162011991831415122122245234107112521317681418152582220121191611941762242313312510711171013723824951261532162221201911841425423235137611251911020812181415172416219222213241541252119209176251014231618378111219122120314232281311164152427161017259518171016182711142432022215825919126231513146714925161810315821231913171145122224212015118239251762181271413222115242019101643";
        SetUpClasses(input);
        solve(input, result);
    }


    ///hard boards:
    ///

    [Test]
    public void TestSolveHardBoard1()
    {
        string input =  "003904800800000002510203069100000007030708090009000500970801043000000000420070058";
        string result = "263914875894567312517283469158649237632758194749132586975821643386495721421376958";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveHardBoard2()
    {
        string input =  "007005980050000003000042700308060007090400000405080006000039200070000001003004650";
        string result = "647315982152798463839642715328961547796453128415287396561839274974526831283174659";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveHardBoard3()
    {
        string input =  "0;00000000000000600:0000000?000000700000000000000004000000000000000000000000000000050000000000000000<0000000000000000000000100000000000000000000000000000000080000000200000000000000000000000000000000000300000000000000>000000000000000000000000000009000000000";
        string result = "91112167156144511031328611410135829123151116478371310121411214166159515254113169768131410121161361521115127491014832485371361610151412111914910112415813116357162712113169141058211561341315214467310111816951215369131011154161228714107911821216314135146151216481514516972131131041013768215135119121416361695104131415127821111114152116312813947510658112141197216106431513";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveHardBoard4()
    {
        string input
        string result = "19112231341821281517921166141510232524207242515516141322972381819101172201243116212346183161721112520221214245197131018152918207917106151534216241182521231422131912122114102241920252371513611943182285171162071014231692511619254158221317312112241825161965172281413122418322021915117102314211317121819152331091416202561124175422284318912202472221721116231451018161519132511222152413142118510782314251216193920176161425203123111724151047221813852119126921018417126319152011162524872312921142251319217155241014121961318253172220242381611138242369211622251732025141241911181017152225111971213818141232191016152462017254376122218105219182191423172411416151332520324231811251792013561281915107141222162148171641418111224212025153135922627192310115513192523436122271016202118128924141117910202212271514164241111713192332568181256129214151141317818102221972011242516532321316222025184122411145721151023171369819515181310287233169191720221625412112114241723112472151019961312512318168142204152214198252011246162221233154122913517171810";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveHardBoard5()
    {
        string input = "100000000000000000002000000000000000000030000000000000000000400005000000000000000000060000000000000000000700000000000000000008000090000000000000000000:0000000000000000000;0000000000000000000<0000=0000000000000000000>0000000000000000000?0000000000000000000@";
        string result = "18431416151392121057116111415162461071135812931075211211936481314161591312638751115161442110653812114161514213910711391012863751114161521415112141310518791612364161741591426103121181358691157141312153141610232115161310124514769811121613561483109112141577414109152111686135121353111310216151248671149410897113142165111563122121614396141371510115814156711512813109213416";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveHardBoard6()
    {
        string input = "00100000000000000000000200000000000000000030000000000000000004005000000000000000000060000000000000000000700000000000000000008000090000000000000000000:0000000000000000000;00000000000000000000<0000=000000000000000000>00000000000000000000?0000000000000000000@";
        string result = "84131615131421291075116141511164610211375128937510212119164381413161513129687531516111424110536811416121421513109719101312637811154151621415214111351107981631264171649142151036128111356912101411116815133475211162515108912144716313413813126751110216141593147155241396161111012826151310163548121191147101137113144165296158121614928126137141553101112851479151131016132416";
        SetUpClasses(input);
        solve(input, result);
    }





}
