using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using SudokuSolver.Solve;
using SudokuSolver.DataStructures.Board;
using SudokuSolver.Exceptions;
using System.Diagnostics;

namespace SudokuTests;

[TestFixture]
public class Tests
{
    private HumanTechniques<int> _HumanTechniques;
    private ComputerTechniques<int> _ComputerTechniques;
    private SudokuBoard<int> _SudokuBoard;
    private List<string> SudokusBoards;
    private SudokuSolver.Validation.ValidateInput<int> validator;
    private static int maxTimeForGrid = 1000;
    private SolverManager<int> solver;
    private Stopwatch stopwatch = new Stopwatch();

    [SetUp]
    public void Setup()
    {

    }

    private void SetUpClasses(string input)
    {
        _SudokuBoard = new SudokuBoard<int>(input);
        _HumanTechniques = new HumanTechniques<int>();
        _ComputerTechniques = new ComputerTechniques<int>();
        solver = new SolverManager<int>(_SudokuBoard);
        solver.AddTechnique(_HumanTechniques);
        solver.AddTechnique(_ComputerTechniques);
    }

    
    private void solve(string input , string expectedResult)
    {
        stopwatch.Reset();
        stopwatch.Start();
        solver.SolveBoard();
        stopwatch.Stop();
        if (stopwatch.ElapsedMilliseconds > maxTimeForGrid && _SudokuBoard.Size<=16)
            Assert.Fail("Took Too Long");
        Assert.That(_SudokuBoard.BoardToString(), Is.EqualTo(expectedResult));
    }



    /// <summary>
    /// Easy Boards:
    /// </summary>
   

    [Test]
    public void TestSolveEasyBoard1()
    {
        string input =  "603000002709400300000000940210050890308027654060800701804001000500009438000300010";
        string result = "643985172759412386182736945217654893398127654465893721834571269571269438926348517";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard2()
    {
        string input =  "670000040300000000001065000807300090460000030009478201100000023706080054000910700";
        string result = "678132549325749618941865372817326495462591837539478261184657923796283154253914786";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard3()
    {
        string input =  "000000000300750960000800541030070100070490385045103600103245790000960013029001050";
        string result = "452619837318754962697832541936578124271496385845123679163245798584967213729381456";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard4()
    {
        string input =  "000300000032900781000410029093800200850060000004179050970500402281700530345620900";
        string result = "719382645432956781568417329193845267857263194624179853976538412281794536345621978";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveEasyBoard5()
    {
        string input =  "025046000460037900037810042800100463006480520054703890541000270003624009692570000";
        string result = "125946738468237915937815642879152463316489527254763891541398276783624159692571384";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard6()
    {
        string input =  "603000002709400300000000940210050890308027654060800701804001000500009438000300010";
        string result = "643985172759412386182736945217654893398127654465893721834571269571269438926348517";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveEasyBoard7()
    {
        string input =  "043927681010030920000408000724090006035000007900000030471000060050600019060070300";
        string result = "543927681817536924692418573724893156135264897986751432471389265358642719269175348";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveEasyBoard8()
    {
        string input = "500000201170000640900010008050070084040009072017348009826090010095100036431850920";
        string result = "584637291172985643963412758659271384348569172217348569826793415795124836431856927";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveEasyBoard9()
    {
        string input =  "080040953300710086020800010900020008608000000000008109060100705047000301105467090";
        string result = "781246953394715286526839417913524678678391524452678139269183745847952361135467892";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveEasyBoard10()
    {
        string input = "009004070020197050700036004046900715078000900092301640005003087003060001200000300";
        string result = "839524176624197853751836294346982715178645932592371648965213487483769521217458369";
        SetUpClasses(input);
        solve(input, result);
    }



    /// <summary>
    ///  Medium Boards: 
    /// </summary>


    [Test]
    public void TestSolveMediumBoard1()
    {
        string input  = "400000805030000000000700000020000060000080400000010000000603070500200000104000000";
        string result = "417369825632158947958724316825437169791586432346912758289643571573291684164875293";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveMediumBoard2()
    {
        string input =  "602050000000004030000000000430008000010000200000000700500270000000000081000600000";
        string result = "682153479951764832374892165437528916816947253295316748568271394729435681143689527";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard3()
    {
        string input =  "000000401800200000000607000000800060040000300010000000600000020050010000700030000";
        string result = "265389471874251693193647852327894165946125387518763249631578924452916738789432516";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard4()
    {
        string input = "000000000072060100005100082080001300400000000037090010000023800504009000000000790";
        string result = "143258679872964153695137482986541327451372968237896514719623845564789231328415796";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard5()
    {
        string input =  "000000940000090005300005070080400100463000000000007080800700000700000028050260000";
        string result = "215876943678394215349125876587432169463981752192657384826743591734519628951268437";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard6()
    {
        string input =  "450000030000801000090000000000050090200700000800000000010040000000000702000600800";
        string result = "458276931623891475197534286371452698269783154845169327712948563986315742534627819";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard7()
    {
        string input =  "060501090100090053900007000040800070000000508081705030000050200000000000076008000";
        string result = "863521794127496853954387621645839172739142568281765439498653217512974386376218945";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard8()
    {
        string input =  "020000000305062009068000300050000000000640802004700900003000001000006000170430000";
        string result = "427593186315862479968174325659328714731649852284751963593287641842916537176435298";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard9()
    {
        string input =  "000=5;7000<6304150800000000?0000030000>00;20000570;00000>00000002000900:0750000;0090400>0200<700;00?600=00>901030000?00080=000>0010000<640007?0=000029000300;0000<7003000008402000000:=0007<0069300>0<805:120076000;00043600500>005:0001009000;40600000008000000";
        string result = "16141513511781091263241548912610211331514111676312113151416711241089571011214931458161361512213141291161015753648111593481114621610127131511816156751312414921103107641523128113119514169128111612641410571531314151016294713361111258131276143159151184162104113581013152167121146939414161281151012151376816111101324361575912141525107146116129138311412613735159118414161012";
        SetUpClasses(input);
        solve(input, result);
    }
    [Test]
    public void TestSolveMediumBoard10()
    {
        string input = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        string result = "12345678910111213141516171819202122232425678910212223242512345111213141516171819201112131415123451617181920212223242567891016171819201112131415212223242567891012345212223242516171819206789101234511121314152513491921126102411188151620257171314222310111213618471822151729232119314242520516182114157242325162219520126910111317412382223191681420171513342521124512182769101125242017935210111314716234612281815122119311752810911720232425221213621181416191544621101122314201617825131925157242391181271522181217255212441910131420916232861113816242013156423199181411122110173225257219192523142131181271615621228451132010172415421115241081712132171420182269192316253198512341522251241162018172321101691471322096211671411133231415195242521210181782223137221719182029251053168111414152421126241410251812211662389221721337151954112015341192081517212692211714161213251024231812109221131124514183123425151720681922167131811622101619741425128243952312021152171420157232511232521161017181924822131146917251682423962218152019137104211211235114";
        SetUpClasses(input);
        solve(input, result);
    }


    ///hard boards:
    ///

    [Test]
    public void TestSolveHardBoard1()
    {
        string input =  "003904800800000002510203069100000007030708090009000500970801043000000000420070058";
        string result = "263914875894567312517283469158649237632758194749132586975821643386495721421376958";
        SetUpClasses(input);
        solve(input, result);
    }


    [Test]
    public void TestSolveHardBoard2()
    {
        string input =  "007005980050000003000042700308060007090400000405080006000039200070000001003004650";
        string result = "647315982152798463839642715328961547796453128415287396561839274974526831283174659";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveHardBoard3()
    {
        string input = "0;00000000000000600:0000000?000000700000000000000004000000000000000000000000000000050000000000000000<0000000000000000000000100000000000000000000000000000000080000000200000000000000000000000000000000000300000000000000>000000000000000000000000000009000000000";
        string result = "91181312131427104651516635104981111316157212141213725101516391464181114151646127511128931013151101276389141311541628611516151974210141213313149161211426853107115274314135101216151891165817131611410291415631211161415971064131213825310126121415857131116494213985123156111611014710961115816121331521474165151323611410471211981122141147516158931361074381014913111262161551";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveHardBoard4()
    {
        string input
        string result = "51114161342021242522187319623191081715212211517313111467241220910211625582342218196421241812101915817135231220223711162514989222519123185232112141611713141572010624127202310822171692515141961824241132151131615102116912141319522202124718173123482518211315324822469167172231915251214201011191417792015252310181311123168614222245212332581217721154101241522149202119181613620222464191816211231482251011121351797153148119171051172164318923132425202212621151012436252123152420819112275171814161139215161822251464138211223241110312920519717132720239171183156122551942122162410811149511212422121920161471017136115822532341824171951151320463229101481272182125112316361247162322121524258191591411131821720102110298112571214172015618519162423413322122131611152103918721231122025461751914248252023181424851719111641323211102261591274189132023124317101962272515821121411216572461421519921112251715204221016113818323112581522181661012133242141425231997117201723312167415252012514813181192410621192211951022114138229231816111732076152412254";
        SetUpClasses(input);
        solve(input, result);
    }



    [Test]
    public void TestSolveHardBoard5()
    {
        string input = "100000000000000000002000000000000000000030000000000000000000400005000000000000000000060000000000000000000700000000000000000008000090000000000000000000:0000000000000000000;0000000000000000000<0000=0000000000000000000>0000000000000000000?0000000000000000000@";
        string result = "11413126345102781611159161589212171154614310134210111513893114167125673561614111015121394128125168107241315111691439123146161112810513154713615412538167914102111147111013915164325816126139165212341481111071554371181016291512161314281215711465131110316941110114941315761638512231614131155291164127810159758166141101213243118114131071214162159136510126241191383571514116";
        SetUpClasses(input);
        solve(input, result);
    }

    [Test]
    public void TestSolveHardBoard6()
    {
        string input = "00100000000000000000000200000000000000000030000000000000000004005000000000000000000060000000000000000000700000000000000000008000090000000000000000000:0000000000000000000;00000000000000000000<0000=000000000000000000>00000000000000000000?0000000000000000000@";
        string result = "14131123456271081116159158169121725411631410132410111389151143167125635761411101612131591428514816724101511311126939315161611148101252134713264538127916141511110121011791511343628516146913102123514841161171547514810161191521213361161512311467131151049821112841315961673141012581631315521116941071412711921661481012113515341645107123162141598131110121415119134358762116";
        SetUpClasses(input);
        solve(input, result);
    }





}
