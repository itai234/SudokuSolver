using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using SudokuSolver.Solve;
using SudokuSolver.DataStructures.Board;
using SudokuSolver.Exceptions;
using System.Diagnostics;
using SudokuSolver.Solve.ComputerAlgorithm;
using SudokuSolver.Solve.HumanHeuristics;

namespace SudokuTests;

[TestFixture]
public class TestSolvableBoards : SudokuTestBase
{

    /// <summary>
    /// Returns all test cases for solvable cases as TestCaseData.
    /// </summary>
    /// 
    public static IEnumerable<TestCaseData> SolvableBoardsTests
    {
        get
        {
            /// easy boards : 
            
            yield return new TestCaseData(
                "603000002709400300000000940210050890308027654060800701804001000500009438000300010",
                "643985172759412386182736945217654893398127654465893721834571269571269438926348517"
            ).SetName("TestEasy1");

            yield return new TestCaseData(
              "670000040300000000001065000807300090460000030009478201100000023706080054000910700",
              "678132549325749618941865372817326495462591837539478261184657923796283154253914786"
            ).SetName("TestEasy2");

            yield return new TestCaseData(
              "000000000300750960000800541030070100070490385045103600103245790000960013029001050",
              "452619837318754962697832541936578124271496385845123679163245798584967213729381456"
            ).SetName("TestEasy3");

            yield return new TestCaseData(
            "000300000032900781000410029093800200850060000004179050970500402281700530345620900",
           "719382645432956781568417329193845267857263194624179853976538412281794536345621978"
             ).SetName("TestEasy4");


            yield return new TestCaseData(
           "025046000460037900037810042800100463006480520054703890541000270003624009692570000",
           "125946738468237915937815642879152463316489527254763891541398276783624159692571384"
            ).SetName("TestEasy5");


            yield return new TestCaseData(
           "603000002709400300000000940210050890308027654060800701804001000500009438000300010",
           "643985172759412386182736945217654893398127654465893721834571269571269438926348517"
            ).SetName("TestEasy6");



            yield return new TestCaseData(
           "043927681010030920000408000724090006035000007900000030471000060050600019060070300",
           "543927681817536924692418573724893156135264897986751432471389265358642719269175348"
            ).SetName("TestEasy7");



            yield return new TestCaseData(
           "500000201170000640900010008050070084040009072017348009826090010095100036431850920",
           "584637291172985643963412758659271384348569172217348569826793415795124836431856927"
            ).SetName("TestEasy8");


            yield return new TestCaseData(
           "080040953300710086020800010900020008608000000000008109060100705047000301105467090",
           "781246953394715286526839417913524678678391524452678139269183745847952361135467892"
            ).SetName("TestEasy9");


            yield return new TestCaseData(
           "009004070020197050700036004046900715078000900092301640005003087003060001200000300",
           "839524176624197853751836294346982715178645932592371648965213487483769521217458369"
            ).SetName("TestEasy10");


            yield return new TestCaseData(
           "0",
           "1"
            ).SetName("TestEasy11");


            yield return new TestCaseData(
            "0000000000000000",
            "4321214334121234"
            ).SetName("TestEasy12");


            /// medium boards tests:
            
            yield return new TestCaseData(
           "400000805030000000000700000020000060000080400000010000000603070500200000104000000",
           "417369825632158947958724316825437169791586432346912758289643571573291684164875293"
           ).SetName("TestMediumBoard1");

            yield return new TestCaseData(
           "602050000000004030000000000430008000010000200000000700500270000000000081000600000",
           "682153479951764832374892165437528916816947253295316748568271394729435681143689527"
           ).SetName("TestMediumBoard2");

            yield return new TestCaseData(
           "000000401800200000000607000000800060040000300010000000600000020050010000700030000",
           "265389471874251693193647852327894165946125387518763249631578924452916738789432516"
           ).SetName("TestMediumBoard3");

            yield return new TestCaseData(
           "000000000072060100005100082080001300400000000037090010000023800504009000000000790",
           "143258679872964153695137482986541327451372968237896514719623845564789231328415796"
           ).SetName("TestMediumBoard4");

            yield return new TestCaseData(
           "000000940000090005300005070080400100463000000000007080800700000700000028050260000",
           "215876943678394215349125876587432169463981752192657384826743591734519628951268437"
           ).SetName("TestMediumBoard5");


            yield return new TestCaseData(
           "450000030000801000090000000000050090200700000800000000010040000000000702000600800",
           "458276931623891475197534286371452698269783154845169327712948563986315742534627819"
           ).SetName("TestMediumBoard6");



            yield return new TestCaseData(
           "060501090100090053900007000040800070000000508081705030000050200000000000076008000",
           "863521794127496853954387621645839172739142568281765439498653217512974386376218945"
           ).SetName("TestMediumBoard7");



            yield return new TestCaseData(
           "020000000305062009068000300050000000000640802004700900003000001000006000170430000",
           "427593186315862479968174325659328714731649852284751963593287641842916537176435298"
           ).SetName("TestMediumBoard8");



            yield return new TestCaseData(
           "000=5;7000<6304150800000000?0000030000>00;20000570;00000>00000002000900:0750000;0090400>0200<700;00?600=00>901030000?00080=000>0010000<640007?0=000029000300;0000<7003000008402000000:=0007<0069300>0<805:120076000;00043600500>005:0001009000;40600000008000000",
           "?9>=5;78:@<632415:82<@63914?>;=763<1:4>97;2=8@?57@;41=?2>583:69<2>6<983:?751=4@;=89@41;>623:<75?;4:?675=@<>921831537?2@<84=;69>:>128;5<649:@7?3=:=@6294713?5;><89<75>31?;=684:2@4;?38:=@2>7<15693?4>@<8;5:129=76<21;=?9436@758:>875:3621=?9>@<;4@6=97>:5<8;4?312"
           ).SetName("TestMediumBoard9");


            /// hard boards: 


            yield return new TestCaseData(
           "003904800800000002510203069100000007030708090009000500970801043000000000420070058",
           "263914875894567312517283469158649237632758194749132586975821643386495721421376958"
           ).SetName("TestHardBoard1");



            yield return new TestCaseData(
           "007005980050000003000042700308060007090400000405080006000039200070000001003004650",
           "647315982152798463839642715328961547796453128415287396561839274974526831283174659"
           ).SetName("TestHardBoard2");


            yield return new TestCaseData(
           "0;00000000000000600:0000000?000000700000000000000004000000000000000000000000000000050000000000000000<0000000000000000000000100000000000000000000000000000000080000000200000000000000000000000000000000000300000000000000>000000000000000000000000000009000000000",
           "9;<@7?6>453:2=1861>:;@=29<8?4753837=:541;2>@6?<92?5439<8761=;@:>;@=62159<7483>?:?925438;@:=>7<61:41><7@=?;638295<7386>?:5921@4;=@2:38=>761;5<94?7>9;?:35=4@<1826186<@2;4:>?953=75=4?961<3872>:@;4:?1=87@235;96><36;954:?>@<7=182=<87>;261?94:53@>5@21<938=:6?;74"
           ).SetName("TestHardBoard3");


            yield return new TestCaseData(

           "C;F3=4B2<815A9E@6>?:GIHD7HI?5@>=F97G8BC:1A2D<43;6EG46183@AE;IDF<>H5C7=:B?29BD79A:615?342@H;8IEG>F=C<<E>:2HCDIG7?=6;943BF85A1@D7:>G@9I;6C254?8F=A31E<HBI@C65AF814=<HB32DE9?;7:G>E=A<BC?G3:9>@DI6;H17542F843189<DH72FAE;6G>5:B@?C=I;F2?H=>EB5:78G14I<@C39DA6@>ID31G;AH?:47FB=85EC<692:B4A<63C?D;@IH87G129E>F5=19E7?524:><C6=BI3AFDHG8@;=8HG69E@FIA3D25><4C;B:17?F25;C7<=8B>1GE9:@?H6DAI4376<F18:52CBE9>GAH;4@?=3ID3HGB;IA9D=56<8C?:7>1F2@E48A@4>B;<HEDI?3=59F627CG:1?5=CIG43612F7:@DEB<89H>;A9:D2EF7?>@4H;1A=CG3I68B<56<9E4?1>=A8B:F2C7D;HI@53G213@FDIB4<H;>57E?:GA=698C5?B=:287G3@9CADF16I4<;E>HAG;H7E5:C96=1I<3B@8>2D4?F>C8ID;H6@FEG3?4<29=5A17B:"
           ).SetName("TestHardBoard4");



            yield return new TestCaseData(
           "100000000000000000002000000000000000000030000000000000000000400005000000000000000000060000000000000000000700000000000000000008000090000000000000000000:0000000000000000000;0000000000000000000<0000=0000000000000000000>0000000000000000000?0000000000000000000@",
           "1843>@?=92<:57;6;>?@246:71=53<98:7521<;93648=>@?9=<63875;?@>421:653<819@?>2=:47;89=:762?5;14<@>34;21<:>3879@?56=>@7?;5=46:3<98215:9>@;86=<?37142<6;793:148>2@=?5=2@4?75<:9;1863>?318=>42@567;:<9@4>=5?<;13:629877<8;6=3>2@591?:431:942@8>=7?6;5<2?65:917<48;>3=@"
           ).SetName("TestHardBoard5");


            yield return new TestCaseData(
           "030000;062<000@0001;:620@80>700400020@8900035=109>0030000;0=0000=000620080003?05:00008000030000<0@000450;<0000090?4500000900>@0004000<:10>600870000000060008040=0200070050?010<0@873050?0:000200;<060000300000=020>070?0000500:60000501000;020000001006;00098030",
           "73?4=1;562<:9>@85=1;:62<@89>73?4<:62>@89?4735=1;9>@83?471;5=<:62=1;<629:87>@3?45:629@87>453?=1;<>@87?453;<=1:6293?451;<=29:6>@87?45=;<:19>62@8731;<:29>673@8?45=629>873@5=?41;<:@87345=?<:1;629>;<:69>@23?8745=129>@73?8=145;<:6873?5=14:6;<29>@45=1<:6;>@29873?"
           ).SetName("TestHardBoard6");

        }
    }



    /// <summary>
    /// This test method will run once for each test case in SolvableBoardsTests.
    /// </summary>
    /// <param name="input">The sudoku board as a string.</param>
    /// <param name="expectedResult">The expected result.</param>
    [Test, TestCaseSource(nameof(SolvableBoardsTests))]
    public void RunSolvableBoardsCaseTest(string input, string expectedResult)
    {
        SolveBoard(input, expectedResult);
    }

}
